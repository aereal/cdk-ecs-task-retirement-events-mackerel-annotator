---

name: CI
on:
  pull_request:
  push:
    branches:
      - master
jobs:
  lambda:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v1.1.2
        with:
          go-version: 1.13.x
      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: install deps
        run: make deps
      - name: test
        run: make test
      - name: build
        run: make build
      - uses: actions/upload-artifact@v1
        with:
          name: annotator
          path: dist/annotator/annotator
  cdk:
    runs-on: ubuntu-latest
    steps:
      - id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      -
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: install
        run: yarn install --frozen-lockfile
      - name: test
        run: yarn test
  release:
    needs:
      - cdk
      - lambda
    runs-on: ubuntu-latest
    if: github.event == 'push'
    steps:
      - id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      -
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: install
        run: yarn install --frozen-lockfile
      - name: draft release
        id: draft-release
        run: yarn draft-release
      - run: |
          git add -u

          export GIT_COMMITTER_NAME="${GITHUB_ACTOR}"
          export GIT_COMMITTER_EMAIL="${GITHUB_ACTOR}@users.noreply.github.com"
          export GIT_AUTHOR_NAME="${GIT_COMMITTER_NAME}"
          export GIT_AUTHOR_EMAIL="${GIT_COMMITTER_EMAIL}"

          git commit -m "Bump version to ${NEXT_VERSION}"
          branch="$(git symbolic-ref --short HEAD)"
          echo "branch=$branch"
          git tag "v${NEXT_VERSION}"
          git push origin $branch
          git push --tags
        env:
          NEXT_VERSION: ${{ steps.draft-release.outputs.next-version }}
