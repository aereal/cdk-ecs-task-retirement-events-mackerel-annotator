---

name: Deployment
on:
  deployment
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v1.1.3
        with:
          go-version: 1.13.x
      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: install deps
        run: go get -v all
      - name: build
        run: go build -o ./deploy ./tools/deployment
      - uses: actions/upload-artifact@v1
        with:
          name: deploy
          path: deploy
  build-lambda:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v1.1.3
        with:
          go-version: 1.13.x
      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: install deps
        run: make deps
      - name: test
        run: make test
      - name: build
        run: make build
      - uses: actions/upload-artifact@v1
        with:
          name: annotator
          path: dist/annotator/annotator
  deploy:
    runs-on: ubuntu-latest
    needs:
      - build
      - build-lambda
    steps:
      - name: dump payload
        env:
          PAYLOAD: ${{ toJson(github) }}
        run: |
          echo "$PAYLOAD" | jq .
      - id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      -
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
          registry-url: 'https://registry.npmjs.org'
      - name: fetch deploy script
        uses: actions/download-artifact@v1
        with:
          name: deploy
          path: deploy
      - run: chmod +x ./deploy/deploy
      - name: fetch lambda artifact
        uses: actions/download-artifact@v1
        with:
          name: annotator
          path: dist/annotator
      - run: |
          chmod +x ./dist/annotator/annotator
      - name: run deploy
        run: echo "$PAYLOAD" | jq .event | ./deploy/deploy
        env:
          PAYLOAD: ${{ toJson(github) }}
          DO_CHANGE: "1"
          GIT_COMMITTER_NAME: ${{ github.actor }}
          GIT_COMMITTER_EMAIL: ${{ github.actor }}@users.noreply.github.com
          GIT_AUTHOR_NAME: ${{ github.actor }}
          GIT_AUTHOR_EMAIL: ${{ github.actor }}@users.noreply.github.com
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
